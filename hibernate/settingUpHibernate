Prerequisites
Eclipse IDE (Java EE version recommended)
MySQL server installed and running
Java JDK 8 or higher
Hibernate 4.1.5.SP1 (or similar version)
MySQL Connector/J (e.g., mysql-connector-java-5.1.21-bin.jar)

Step 1: Download Required Libraries or create maven project and add these two in the pom.xml as dependencies(recommended and done this in project)
Hibernate:
Download from http://hibernate.org/downloads
Extract and locate the JAR files under lib/required.

MySQL JDBC Driver (Connector/J):
Download from https://dev.mysql.com/downloads/connector/j/
Extract the file and use mysql-connector-java-5.1.21-bin.jar.

pom.xml file:
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>learn</groupId>
  <artifactId>hiber</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>hiber</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>8.0.33</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core -->
	<dependency>
	    <groupId>org.hibernate.orm</groupId>
	    <artifactId>hibernate-core</artifactId>
	    <version>6.6.13.Final</version>
	</dependency>
  </dependencies>
</project>


Step 2: Setup MySQL Database or can use update in it hibernate.cfg.xml file:
login to myswl on powershell or sqlworkbench and create a database and table
for example:
CREATE DATABASE j2ee;
USE j2ee;

CREATE TABLE student (
  id INT,
  name VARCHAR(45),
  address VARCHAR(45),
  yop INT
)

hibernate.cfg.xml file:

<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
//The above lines are from the hibernate-configuration-3.0.dtd file which should be downloaded from google
 
<hibernate-configuration>
 <session-factory>
  
  	<property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
    <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/j2ee</property>
    <property name="hibernate.connection.username">root</property>
    <property name="hibernate.connection.password">xxxx</property>
 
    <property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>
    <property name="hibernate.hbm2ddl.auto">update</property>
    <property name="show_sql">true</property>
 
     <mapping class="learn.hiber.Student"/>
  
 </session-factory>
</hibernate-configuration>

Step 3:
create an entity class : Student.java file
package learn.hiber;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;

@Entity //whose table has to be created
public class Student {
	@Id //to specify the primary key
	int kodId;
	String name;
	String address;
	int yop;
	
	public Student(int kodId, String name, String address, int yop) {
		this.kodId = kodId;
		this.name = name;
		this.address = address;
		this.yop = yop;
	}
}

Step 4:
Add this to the App.java file :
package learn.hiber;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class App 
{
    public static void main( String[] args )
    {
        Configuration cfg = new Configuration();
        cfg.configure("hibernate.cfg.xml"); //Specifying where the configuration file is
        SessionFactory fact = cfg.buildSessionFactory();
        
        System.out.println(fact);
    }
}

